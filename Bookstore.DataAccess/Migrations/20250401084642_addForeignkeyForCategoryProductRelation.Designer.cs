// <auto-generated />
using Bookstore.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookstore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401084642_addForeignkeyForCategoryProductRelation")]
    partial class addForeignkeyForCategoryProductRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookstore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = "1",
                            Name = "History"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = "2",
                            Name = "War"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = "3",
                            Name = "Entertainment"
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Nancy Drew",
                            CategoryId = 1,
                            Description = "A thrilling mystery novel that keeps you on edge.",
                            ISBN = "DSK888002",
                            ListPrice = 120.0,
                            Price = 110.0,
                            Price100 = 100.0,
                            Price50 = 105.0,
                            Title = "Dark Skies"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Dan Brown",
                            CategoryId = 2,
                            Description = "A fast-paced adventure filled with secrets and history.",
                            ISBN = "TLS777003",
                            ListPrice = 150.0,
                            Price = 140.0,
                            Price100 = 130.0,
                            Price50 = 135.0,
                            Title = "The Lost Symbol"
                        },
                        new
                        {
                            Id = 3,
                            Author = "John Doe",
                            CategoryId = 3,
                            Description = "A complete guide to mastering C# and .NET development.",
                            ISBN = "CSM666004",
                            ListPrice = 200.0,
                            Price = 180.0,
                            Price100 = 160.0,
                            Price50 = 170.0,
                            Title = "C# Mastery"
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Product", b =>
                {
                    b.HasOne("Bookstore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Bookstore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
